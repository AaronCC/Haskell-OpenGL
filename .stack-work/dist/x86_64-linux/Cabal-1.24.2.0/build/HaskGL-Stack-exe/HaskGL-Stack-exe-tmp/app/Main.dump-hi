
==================== FINAL INTERFACE ====================
2017-12-07 20:04:17.755187 UTC

interface main@main:Main 8002
  interface hash: 62924e5344a73cab96d4408951b4c4f8
  ABI hash: 32a796d2e11a9917b11d323dbd54d607
  export-list hash: e3b89aa366de6a1166a6325b79d366cd
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0cd4400c5901eb8e391e4a44d55987ce
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: GLURaw-2.0.0.3@GLURaw-2.0.0.3-Dsh0J6RJGCYIX4KzhPpy5R
                      GLUT-2.7.0.12@GLUT-2.7.0.12-DC8hzFoSREsLOe0a29m1po
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa
                      OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-8JxKpZbO2kWCx46iLc1G4X
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ ghc-prim-0.5.0.0
                      gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi
                      gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss bf67b0e05def334587dfecab9a36e1dd
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Color 45da860083551187378f3db9bd1a5264
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Display a33b500bad61c732da0e1a5a8d7ca154
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Picture acb105bdd44e47e26ad5cc5612291d6f
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.ViewPort f64776979ae45f409f1e1e1092fecbbb
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Interface.Pure.Game aae3992afa14d254cc2c9f25d84c26d5
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Internals.Interface.Backend.Types 00f85b0adfa29fe96d73d92f3e4b65ce
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Internals.Interface.Event 8fcdc7c4c65b12ebdbd4e07173352476
import  -/  gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Color f397894b78d6fbb7fafb076846e25498
import  -/  gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Picture 06b134b12b86b8d47d5ac0ceff5d2f70
12a8493d0617524a2a1b8a2b8a817d94
  $fShowPongGame :: GHC.Show.Show Main.PongGame
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.PongGame
                  Main.$fShowPongGame_$cshowsPrec
                  Main.$fShowPongGame_$cshow
                  Main.$fShowPongGame_$cshowList -}
12a8493d0617524a2a1b8a2b8a817d94
  $fShowPongGame1 :: Main.PongGame -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Main.PongGame) ->
                 case w of ww { Main.Game ww1 ww2 ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 ww5 ww6 }) -}
12a8493d0617524a2a1b8a2b8a817d94
  $fShowPongGame_$cshow :: Main.PongGame -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U(U),U(U)),U(U(U),U(U)),1*U(U),1*U(U),U(U,U),U(U,U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.PongGame) ->
                 Main.$fShowPongGame_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
12a8493d0617524a2a1b8a2b8a817d94
  $fShowPongGame_$cshowList :: [Main.PongGame] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Main.PongGame
                   Main.$fShowPongGame1) -}
12a8493d0617524a2a1b8a2b8a817d94
  $fShowPongGame_$cshowsPrec ::
    GHC.Types.Int -> Main.PongGame -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U(U),U(U)),U(U(U),U(U)),1*U(U),1*U(U),U(U,U),U(U,U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.PongGame) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Game ww3 ww4 ww5 ww6 ww7 ww8 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 ww7 ww8 } }) -}
4bc39e9741b618040e08de679f285b2d
  $tc'Game :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4536656583985243897##
                   12229724575624676726##
                   Main.$trModule
                   Main.$tc'Game1) -}
53f07f1f7d87658196bd2ee6b919659d
  $tc'Game1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Game"#) -}
2076d8899f7ba21f04b81df6d9cab406
  $tcPongGame :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16667677062937766488##
                   5025074772596735273##
                   Main.$trModule
                   Main.$tcPongGame1) -}
1a522fcdeba2291ce433ca9c488aa58a
  $tcPongGame1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PongGame"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
901a21c29db858d1eb345febdff05557
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> (GHC.Types.Float, GHC.Types.Float)
    -> (GHC.Types.Float, GHC.Types.Float)
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> Main.PKeyState
    -> Main.PKeyState
    -> GHC.Show.ShowS
  {- Arity: 7,
     Strictness: <S,U><L,U(U(U),U(U))><L,U(U(U),U(U))><L,1*U(U)><L,1*U(U)><L,U(U,U)><L,U(U,U)>,
     Inline: [0] -}
a77a688a0ca596562c5e5d4801ea1822
  type PKeyState = (GHC.Types.Bool, GHC.Types.Bool)
12a8493d0617524a2a1b8a2b8a817d94
  data PongGame
    = Game {ballLoc :: (GHC.Types.Float, GHC.Types.Float),
            ballVel :: (GHC.Types.Float, GHC.Types.Float),
            player1 :: GHC.Types.Float,
            player2 :: GHC.Types.Float,
            player1Keys :: Main.PKeyState,
            player2Keys :: Main.PKeyState}
9c18057061b8a47610c39b0a55e86cae
  type Position = (GHC.Types.Float, GHC.Types.Float)
ef599d3631095a025c90fc187752ef36
  type Radius = GHC.Types.Float
e60429c6682520aacd4c11d8528edbf0
  ballLoc :: Main.PongGame -> (GHC.Types.Float, GHC.Types.Float)
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(1*U(U,U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds1 }) -}
7c8a1523e9739bbeac7b9c55aa3e9bdd
  ballVel :: Main.PongGame -> (GHC.Types.Float, GHC.Types.Float)
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,1*U(U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds2 }) -}
b376259f5332dff06995485c9450356b
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1873ca8d4b98eb7b0b124ebe748a2754
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main53
                        GHC.Types.True
                        eta2 of ds { (#,#) ipv ipv1 ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ Main.PongGame
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.glutStateInit
                        Main.main48
                        Graphics.Gloss.Data.Color.black
                        Main.main47
                        Main.main39
                        Main.main9
                          `cast`
                        (<Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Main.main3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Main.PongGame>_R))
                        Main.main2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Main.PongGame>_R))
                        GHC.Types.True
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2, ipv1 #) } }) -}
32bb36f39a7ba9c3c649e8c9aafe9285
  main10 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.orange
                   Main.main11) -}
bb11b3be4d94264155ae538f645d3b8a
  main11 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main12) -}
9a6f34cb3fcca02ad95ee6c1d0dcdf9b
  main12 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main14
                        Main.main13 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
264a3955342bdd4dafa52c8cfdf0f5a0
  main13 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 86.0#) -}
948b5b3b4e9a944114e084dc1154e101
  main14 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 26.0#) -}
a37b12d4476a474eb165e53686aafbe5
  main15 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main20
                   Main.main16) -}
2f0fdad1606c50773efeb3aedbba6681
  main16 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main17) -}
8ade2827a3e1e703055205211e6b7d0f
  main17 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main19
                        Main.main18 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
3bcefe9db8a3a2a89062185b89f943ad
  main18 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 80.0#) -}
2366e71c18a77844a93219a15ae73738
  main19 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 20.0#) -}
e654f99a253e493dee3154889491bb38
  main2 ::
    GHC.Types.Float
    -> Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.PongGame #)
  {- Arity: 3 -}
3ee2bae77e3a3175f66ab579071542ec
  main20 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.4#
                   0.4#
                   1.0#
                   1.0#) -}
01afdabf466bbf67b3965067b8bb4ab2
  main21 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.rose
                   Main.main11) -}
ab9cdf815c67707a9e25624f7284ae9a
  main22 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Main.main23) -}
e786aec99282bad320c5c0542e07b7cb
  main23 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Main.main33
                   Main.main24) -}
d7fa935fe1ad91e1f2337233584183b8
  main24 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Main.main25
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
ce66293331ac6d749e63a4823c709225
  main25 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Main.main5
                   Main.main32
                   Main.main26) -}
b2acf5f372d17e17bfcd7e4d0335422f
  main26 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main31
                   Main.main27) -}
933e33e393fd1654608cb5ffe9f15ffb
  main27 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main28) -}
f811964f4231aa5557ef758db8ca012d
  main28 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main30
                        Main.main29 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
ff62f32614b43be8460049bb6bcdb9f8
  main29 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 10.0#) -}
5c0167576f1868b75c74a70db363945c
  main3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.PongGame #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (event :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (world1 :: Main.PongGame)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case event of wild {
                      DEFAULT -> world1
                      Graphics.Gloss.Internals.Interface.Event.EventKey ds ds1 ds2 ds3
                      -> case ds of wild1 {
                           Graphics.Gloss.Internals.Interface.Backend.Types.Char ds4
                           -> case ds4 of wild2 { GHC.Types.C# ds5 ->
                              case ds5 of ds6 {
                                DEFAULT -> world1
                                'a'#
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { Main.Game ds7 ds8 ds9 ds10 ds11 ds12 ->
                                        Main.Game ds7 ds8 ds9 ds10 ds11 Main.main8 }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                     -> case world1 of wild4 { Main.Game ds7 ds8 ds9 ds10 ds11 ds12 ->
                                        Main.Game ds7 ds8 ds9 ds10 ds11 Main.main7 } }
                                'q'#
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { Main.Game ds7 ds8 ds9 ds10 ds11 ds12 ->
                                        Main.Game ds7 ds8 ds9 ds10 ds11 Main.main6 }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                     -> case world1 of wild4 { Main.Game ds7 ds8 ds9 ds10 ds11 ds12 ->
                                        Main.Game ds7 ds8 ds9 ds10 ds11 Main.main7 } }
                                's'#
                                -> case world1 of wild3 { Main.Game ds7 ds8 ds9 ds10 ds11 ds12 ->
                                   Main.Game Main.main4 ds8 ds9 ds10 ds11 ds12 } } }
                           Graphics.Gloss.Internals.Interface.Backend.Types.SpecialKey ds4
                           -> case ds4 of wild2 {
                                DEFAULT -> world1
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyUp
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { Main.Game ds5 ds6 ds7 ds8 ds9 ds10 ->
                                        Main.Game ds5 ds6 ds7 ds8 Main.main6 ds10 }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                     -> case world1 of wild4 { Main.Game ds5 ds6 ds7 ds8 ds9 ds10 ->
                                        Main.Game ds5 ds6 ds7 ds8 Main.main7 ds10 } }
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyDown
                                -> case ds1 of wild3 {
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Down
                                     -> case world1 of wild4 { Main.Game ds5 ds6 ds7 ds8 ds9 ds10 ->
                                        Main.Game ds5 ds6 ds7 ds8 Main.main8 ds10 }
                                     Graphics.Gloss.Internals.Interface.Backend.Types.Up
                                     -> case world1 of wild4 { Main.Game ds5 ds6 ds7 ds8 ds9 ds10 ->
                                        Main.Game ds5 ds6 ds7 ds8 Main.main7 ds10 } } }
                           Graphics.Gloss.Internals.Interface.Backend.Types.MouseButton ipv
                           -> world1 } } #)) -}
7e638def303cd611a862d360c8666b7a
  main30 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 270.0#) -}
2125d925958d1764566608b07301850e
  main31 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.5#
                   0.5#
                   0.5#
                   1.0#) -}
c8a36a08f605a06b4c74147a2fb4173d
  main32 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# -150.0#) -}
c744c6f081ae1f0d74c6b5db92bd8f1a
  main33 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Main.main5
                   Main.main34
                   Main.main26) -}
d17bd3de68da2240f1829db72e0174f5
  main34 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 150.0#) -}
c83a4e72717004d3d5c8bbbe707332f7
  main35 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main38
                   Main.main36) -}
3736afce7cd444a3fae191c574641257
  main36 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.ThickCircle
                   Main.main37
                   Main.main29) -}
4c25883d2f611cb4f0e5bfd00b9063fc
  main37 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 5.0#) -}
14df2c277be5981ce35d9edc45119f2c
  main38 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.8#
                   -0.2#
                   -0.2#
                   1.0#) -}
682f90ab84324b6e7907accaed056f3a
  main39 :: Main.PongGame
  {- HasNoCafRefs,
     Unfolding: (Main.Game
                   Main.main45
                   Main.main42
                   Main.main41
                   Main.main40
                   Main.main7
                   Main.main7) -}
38e048dd368bd26c672a57b237a5c045
  main4 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main5, Main.main5)) -}
d9986d95e570afcf4a2bc9fcd6c5d404
  main40 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -80.0#) -}
17c584704f94e3d2da3b85705b08162c
  main41 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 40.0#) -}
e8ed9259202fc030a1a783ce9cb2f733
  main42 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Unfolding: ((Main.main44, Main.main43)) -}
d55ac0ae039aa2553f769a414c9ddc11
  main43 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 3.0#) -}
220910240a0aede98b1fdd612dbae689
  main44 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 30.0#) -}
81bb49ec174927b511148140b8a6e602
  main45 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Unfolding: ((Main.main46, Main.main44)) -}
46a8bfd2c654b41316e705157b487130
  main46 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -10.0#) -}
556ec164540a901a805aefee32b6a492
  main47 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60#) -}
de57429d7ed1897881baf3ca4c24125f
  main48 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Main.main52
                   Main.main50
                   Main.main49) -}
a48bca172c3a16b2b541324aff11ab3e
  main49 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.offset, Main.offset)) -}
a100dd1b89d330d7e540773824900f8e
  main5 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
28c88d3d0270d5aa555a9602f7625201
  main50 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main51, Main.main51)) -}
4254b25b76756b9298099318dffc57de
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 300#) -}
16a7d0b48cebddf83ee333cf0c40f23a
  main52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pong"#) -}
493fb710e1b7ceb3810240983f20e0f7
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main54) -}
1724cf08486cfe45b7b9ded96ebbb82e
  main54 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main56 Main.main55) -}
1d953a7462da20ba9e17ae33bde21309
  main55 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4b8f0470a4948a94e584e975482956da
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Welcome to Pong"#) -}
674a7f3307c910a3d4ec692d59a5a4bc
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
662a8ca68414f3b7eb52d2a23f852883
  main6 :: (GHC.Types.Bool, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.True, GHC.Types.False)) -}
fa5673595bb0019ed7486bfadc1d47d0
  main7 :: (GHC.Types.Bool, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.False, GHC.Types.False)) -}
912cfbfaa8ea744a61ac39c015c55b56
  main8 :: (GHC.Types.Bool, GHC.Types.Bool)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Types.False, GHC.Types.True)) -}
6cd263a5ad88ec69dafd0ba9e36a8b8c
  main9 ::
    Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x :: Main.PongGame)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    Graphics.Gloss.Internals.Data.Picture.Pictures
                      (GHC.Types.:
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         (let {
                            p :: (GHC.Types.Float, GHC.Types.Float)
                            = case x of wild { Main.Game ds ds1 ds2 ds3 ds4 ds5 -> ds }
                          } in
                          Graphics.Gloss.Internals.Data.Picture.Translate
                            (case p of wild { (,) x1 ds -> x1 })
                            (case p of wild { (,) ds y -> y })
                            Main.main35)
                         (GHC.Types.:
                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                            Main.main22
                            (GHC.Types.:
                               @ Graphics.Gloss.Internals.Data.Picture.Picture
                               (let {
                                  y :: GHC.Types.Float
                                  = case x of wild { Main.Game ds ds1 ds2 ds3 ds4 ds5 -> ds2 }
                                } in
                                Graphics.Gloss.Internals.Data.Picture.Pictures
                                  (GHC.Types.:
                                     @ Graphics.Gloss.Internals.Data.Picture.Picture
                                     (Graphics.Gloss.Internals.Data.Picture.Translate
                                        Main.paddleR
                                        y
                                        Main.main21)
                                     (GHC.Types.:
                                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                                        (Graphics.Gloss.Internals.Data.Picture.Translate
                                           Main.paddleR
                                           y
                                           Main.main15)
                                        (GHC.Types.[]
                                           @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                               (GHC.Types.:
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  (let {
                                     y :: GHC.Types.Float
                                     = case x of wild { Main.Game ds ds1 ds2 ds3 ds4 ds5 -> ds3 }
                                   } in
                                   Graphics.Gloss.Internals.Data.Picture.Pictures
                                     (GHC.Types.:
                                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                                        (Graphics.Gloss.Internals.Data.Picture.Translate
                                           Main.paddleL
                                           y
                                           Main.main10)
                                        (GHC.Types.:
                                           @ Graphics.Gloss.Internals.Data.Picture.Picture
                                           (Graphics.Gloss.Internals.Data.Picture.Translate
                                              Main.paddleL
                                              y
                                              Main.main15)
                                           (GHC.Types.[]
                                              @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                                  (GHC.Types.[]
                                     @ Graphics.Gloss.Internals.Data.Picture.Picture))))) #)) -}
fe63330dae3b074c4cf48d129b94eb72
  offset :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
254ab8c798b7872fdde7dc69508f373f
  paddleL :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# -120.0#) -}
0aadc7fadc1f6fa0ddb6492213b5a948
  paddleR :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 120.0#) -}
7cd76c32dcc5bb44b57617d0cbfdb0e1
  player1 :: Main.PongGame -> GHC.Types.Float
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,1*U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds3 }) -}
1925a70752fc466b7dab81bd6fdf588f
  player1Keys :: Main.PongGame -> Main.PKeyState
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds5 }) -}
d2b156c85703bdc08e4a7a7095e35525
  player2 :: Main.PongGame -> GHC.Types.Float
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds4 }) -}
ac33d52342f843f02a58757904ba48c6
  player2Keys :: Main.PongGame -> Main.PKeyState
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 ds5 ds6 -> ds6 }) -}
instance GHC.Show.Show [Main.PongGame] = Main.$fShowPongGame
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

