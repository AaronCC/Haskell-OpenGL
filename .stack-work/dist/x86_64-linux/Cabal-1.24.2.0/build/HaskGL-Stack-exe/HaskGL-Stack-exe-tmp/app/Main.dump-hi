
==================== FINAL INTERFACE ====================
2017-12-05 20:10:26.851295 UTC

interface main@main:Main 8002
  interface hash: aa263a0d95f41ed758be472c8595a3bc
  ABI hash: 51703e93d9f8fb855568b7f0235329ae
  export-list hash: e3b89aa366de6a1166a6325b79d366cd
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0cd4400c5901eb8e391e4a44d55987ce
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: GLURaw-2.0.0.3@GLURaw-2.0.0.3-Dsh0J6RJGCYIX4KzhPpy5R
                      GLUT-2.7.0.12@GLUT-2.7.0.12-DC8hzFoSREsLOe0a29m1po
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.2.0@OpenGL-3.0.2.0-6fbDRkN7rpfG63nVz30IBa
                      OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-8JxKpZbO2kWCx46iLc1G4X
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ ghc-prim-0.5.0.0
                      gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi
                      gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      integer-gmp-1.0.0.1 stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss bf67b0e05def334587dfecab9a36e1dd
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Color 45da860083551187378f3db9bd1a5264
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Display a33b500bad61c732da0e1a5a8d7ca154
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.Picture acb105bdd44e47e26ad5cc5612291d6f
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Data.ViewPort f64776979ae45f409f1e1e1092fecbbb
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Interface.Pure.Game aae3992afa14d254cc2c9f25d84c26d5
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Internals.Interface.Backend.Types 00f85b0adfa29fe96d73d92f3e4b65ce
import  -/  gloss-1.11.1.1@gloss-1.11.1.1-8GzjbnWS46V6aZCKK1kaHi:Graphics.Gloss.Internals.Interface.Event 8fcdc7c4c65b12ebdbd4e07173352476
import  -/  gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Color f397894b78d6fbb7fafb076846e25498
import  -/  gloss-rendering-1.11.1.1@gloss-rendering-1.11.1.1-2H1Z0FJPE28CgZNofHijuT:Graphics.Gloss.Internals.Data.Picture 06b134b12b86b8d47d5ac0ceff5d2f70
7876d03c82c631244d3af854cb04893e
  $fShowPongGame :: GHC.Show.Show Main.PongGame
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.PongGame
                  Main.$fShowPongGame_$cshowsPrec
                  Main.$fShowPongGame_$cshow
                  Main.$fShowPongGame_$cshowList -}
7876d03c82c631244d3af854cb04893e
  $fShowPongGame1 :: Main.PongGame -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Main.PongGame) ->
                 case w of ww { Main.Game ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
7876d03c82c631244d3af854cb04893e
  $fShowPongGame_$cshow :: Main.PongGame -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U(U(U),U(U)),U(U(U),U(U)),1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.PongGame) ->
                 Main.$fShowPongGame_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7876d03c82c631244d3af854cb04893e
  $fShowPongGame_$cshowList :: [Main.PongGame] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Main.PongGame
                   Main.$fShowPongGame1) -}
7876d03c82c631244d3af854cb04893e
  $fShowPongGame_$cshowsPrec ::
    GHC.Types.Int -> Main.PongGame -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(U(U(U),U(U)),U(U(U),U(U)),1*U(U),1*U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.PongGame) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Game ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
4bc39e9741b618040e08de679f285b2d
  $tc'Game :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4536656583985243897##
                   12229724575624676726##
                   Main.$trModule
                   Main.$tc'Game1) -}
53f07f1f7d87658196bd2ee6b919659d
  $tc'Game1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Game"#) -}
2076d8899f7ba21f04b81df6d9cab406
  $tcPongGame :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16667677062937766488##
                   5025074772596735273##
                   Main.$trModule
                   Main.$tcPongGame1) -}
1a522fcdeba2291ce433ca9c488aa58a
  $tcPongGame1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PongGame"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4fdd99cd79ac7a3a02098022577cb633
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> (GHC.Types.Float, GHC.Types.Float)
    -> (GHC.Types.Float, GHC.Types.Float)
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,U(U(U),U(U))><L,U(U(U),U(U))><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
7876d03c82c631244d3af854cb04893e
  data PongGame
    = Game {ballLoc :: (GHC.Types.Float, GHC.Types.Float),
            ballVel :: (GHC.Types.Float, GHC.Types.Float),
            player1 :: GHC.Types.Float,
            player2 :: GHC.Types.Float}
9c18057061b8a47610c39b0a55e86cae
  type Position = (GHC.Types.Float, GHC.Types.Float)
ef599d3631095a025c90fc187752ef36
  type Radius = GHC.Types.Float
aa066c41c51ab8cdf4a25181c32a1697
  ballLoc :: Main.PongGame -> (GHC.Types.Float, GHC.Types.Float)
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 -> ds1 }) -}
b52e8b26b255a9b2f31f2b6e92daf8cd
  ballVel :: Main.PongGame -> (GHC.Types.Float, GHC.Types.Float)
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 -> ds2 }) -}
b2e261d6e8fc22408dc6899c7bfa86b6
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
5f682f93facd8856313991be895919ff
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State#
                              GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main50
                        GHC.Types.True
                        eta2 of ds { (#,#) ipv ipv1 ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ Main.PongGame
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.glutStateInit
                        Main.main45
                        Graphics.Gloss.Data.Color.black
                        Main.main44
                        Main.main36
                        Main.main6
                          `cast`
                        (<Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Main.main3
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Main.PongGame>_R))
                        Main.main2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <Main.PongGame>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Main.PongGame>_R))
                        GHC.Types.True
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2, ipv1 #) } }) -}
9d488731a13f67685365cc70979b47b3
  main10 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 86.0#) -}
f91e63047f38fef0121efd942ad13178
  main11 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 26.0#) -}
48dbb5e49368708554e4e3e425d8e9df
  main12 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main17
                   Main.main13) -}
5f6afc9009eed6a62ac42bf4090beafc
  main13 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main14) -}
9ded50adba384c8ae93ac123d14c5acd
  main14 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main16
                        Main.main15 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
34fad10207d1db28effba826ed7cc84c
  main15 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 80.0#) -}
1f2c7aef7b03aeabf011ab85c048ab57
  main16 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 20.0#) -}
7a68e680e65ef4f32a4a135cb0737157
  main17 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.4#
                   0.4#
                   1.0#
                   1.0#) -}
66a5121d97e0f1c17d07506040f8ad09
  main18 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.rose
                   Main.main8) -}
e20ac6c98c1a4336ba1c95d4b09c3207
  main19 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m14,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Pictures
                   Main.main20) -}
f45e9100e7c8a93c801a74e412bc8a2a
  main2 ::
    GHC.Types.Float
    -> Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.PongGame #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: Main.PongGame)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case world1 of wild { Main.Game ds ds1 ds2 ds3 ->
                    let {
                      ww :: GHC.Types.Float
                      = case ds of wild1 { (,) x y ->
                        case y of wild2 { GHC.Types.F# x1 ->
                        case ds1 of wild3 { (,) vx vy ->
                        case vy of wild4 { GHC.Types.F# x2 ->
                        case time of wild5 { GHC.Types.F# y1 ->
                        GHC.Types.F#
                          (GHC.Prim.plusFloat# x1 (GHC.Prim.timesFloat# x2 y1)) } } } } }
                    } in
                    let {
                      ww1 :: GHC.Types.Float
                      = case ds of wild1 { (,) x y ->
                        case x of wild2 { GHC.Types.F# x1 ->
                        case ds1 of wild3 { (,) vx vy ->
                        case vx of wild4 { GHC.Types.F# x2 ->
                        case time of wild5 { GHC.Types.F# y1 ->
                        GHC.Types.F#
                          (GHC.Prim.plusFloat# x1 (GHC.Prim.timesFloat# x2 y1)) } } } } }
                    } in
                    Main.Game
                      (ww1, ww)
                      (case ww1 of wild1 { GHC.Types.F# x ->
                       let {
                         ds4 :: GHC.Types.Float = case ds1 of wild2 { (,) vx vy -> vx }
                       } in
                       let {
                         $j :: GHC.Prim.Void# -> GHC.Types.Float
                           {- Arity: 1, Strictness: <L,A> -}
                         = \ (w :: GHC.Prim.Void#)[OneShot] ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geFloat#
                                     (GHC.Prim.plusFloat# x 10.0#)
                                     110.0#) of wild2 {
                             GHC.Types.False -> ds4
                             GHC.Types.True
                             -> case ww of wild3 { GHC.Types.F# x1 ->
                                case ds2 of wild4 { GHC.Types.F# x2 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.leFloat#
                                          x1
                                          (GHC.Prim.plusFloat# x2 40.0#)) of wild5 {
                                  GHC.Types.False -> ds4
                                  GHC.Types.True
                                  -> case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geFloat#
                                               x1
                                               (GHC.Prim.minusFloat# x2 40.0#)) of wild6 {
                                       GHC.Types.False -> ds4
                                       GHC.Types.True
                                       -> case ds4 of wild7 { GHC.Types.F# x3 ->
                                          GHC.Types.F# (GHC.Prim.negateFloat# x3) } } } } } }
                       } in
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.leFloat#
                                 (GHC.Prim.minusFloat# x 10.0#)
                                 -110.0#) of wild2 {
                         GHC.Types.False -> $j GHC.Prim.void#
                         GHC.Types.True
                         -> case ww of wild3 { GHC.Types.F# x1 ->
                            case ds3 of wild4 { GHC.Types.F# x2 ->
                            case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.leFloat# x1 (GHC.Prim.plusFloat# x2 40.0#)) of wild5 {
                              GHC.Types.False -> $j GHC.Prim.void#
                              GHC.Types.True
                              -> case GHC.Prim.tagToEnum#
                                        @ GHC.Types.Bool
                                        (GHC.Prim.geFloat#
                                           x1
                                           (GHC.Prim.minusFloat# x2 40.0#)) of wild6 {
                                   GHC.Types.False -> $j GHC.Prim.void#
                                   GHC.Types.True
                                   -> case ds4 of wild7 { GHC.Types.F# x3 ->
                                      GHC.Types.F# (GHC.Prim.negateFloat# x3) } } } } } } },
                       case ww of wild1 { GHC.Types.F# x ->
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.leFloat#
                                 (GHC.Prim.minusFloat# x 10.0#)
                                 -150.0#) of wild2 {
                         GHC.Types.False
                         -> case GHC.Prim.tagToEnum#
                                   @ GHC.Types.Bool
                                   (GHC.Prim.geFloat#
                                      (GHC.Prim.plusFloat# x 10.0#)
                                      150.0#) of wild3 {
                              GHC.Types.False -> case ds1 of wild4 { (,) vx vy -> vy }
                              GHC.Types.True
                              -> case ds1 of wild4 { (,) vx vy ->
                                 case vy of wild5 { GHC.Types.F# x1 ->
                                 GHC.Types.F# (GHC.Prim.negateFloat# x1) } } }
                         GHC.Types.True
                         -> case ds1 of wild3 { (,) vx vy ->
                            case vy of wild4 { GHC.Types.F# x1 ->
                            GHC.Types.F# (GHC.Prim.negateFloat# x1) } } } })
                      ds2
                      ds3 } #)) -}
249e012aee39328eb5e948d4cafa0d2a
  main20 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Main.main30
                   Main.main21) -}
b315c4ba7956c97b99a561013aeb0c97
  main21 :: [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Picture
                   Main.main22
                   (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture)) -}
ece5d9712ac84660c4eca0b496b5f951
  main22 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Main.main5
                   Main.main29
                   Main.main23) -}
794035b549603dec2192bad15ef91483
  main23 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main28
                   Main.main24) -}
f7fc789e91e98fed1accec71c2aa9220
  main24 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main25) -}
fd493d536fcd01eed2b06ac8e162809b
  main25 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main27
                        Main.main26 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
a3b494cb37d71bd2b5d00db8ba82a66f
  main26 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 10.0#) -}
5ecdc319606e80b032e2df0f6e97f312
  main27 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 270.0#) -}
d4339bad8f1d65ab49a51d07d2fc1528
  main28 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.5#
                   0.5#
                   0.5#
                   1.0#) -}
0a5501f42f2af9fca7b2f0455bc902e8
  main29 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# -150.0#) -}
e9af81445e1298b1e8663e3f48d17502
  main3 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.PongGame #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (event :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (world1 :: Main.PongGame)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case event of wild {
                      DEFAULT -> world1
                      Graphics.Gloss.Internals.Interface.Event.EventKey ds ds1 ds2 ds3
                      -> case ds of wild1 {
                           Graphics.Gloss.Internals.Interface.Backend.Types.Char ds4
                           -> case ds4 of wild2 { GHC.Types.C# ds5 ->
                              case ds5 of ds6 {
                                DEFAULT -> world1
                                'a'#
                                -> case world1 of wild3 { Main.Game ds7 ds8 ds9 ds10 ->
                                   Main.Game
                                     ds7
                                     ds8
                                     ds9
                                     (case ds10 of wild4 { GHC.Types.F# x ->
                                      GHC.Types.F# (GHC.Prim.minusFloat# x 5.0#) }) }
                                'q'#
                                -> case world1 of wild3 { Main.Game ds7 ds8 ds9 ds10 ->
                                   Main.Game
                                     ds7
                                     ds8
                                     ds9
                                     (case ds10 of wild4 { GHC.Types.F# x ->
                                      GHC.Types.F# (GHC.Prim.plusFloat# x 5.0#) }) }
                                's'#
                                -> case world1 of wild3 { Main.Game ds7 ds8 ds9 ds10 ->
                                   Main.Game Main.main4 ds8 ds9 ds10 } } }
                           Graphics.Gloss.Internals.Interface.Backend.Types.SpecialKey ds4
                           -> case ds4 of wild2 {
                                DEFAULT -> world1
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyUp
                                -> case world1 of wild3 { Main.Game ds5 ds6 ds7 ds8 ->
                                   Main.Game
                                     ds5
                                     ds6
                                     (case ds7 of wild4 { GHC.Types.F# x ->
                                      GHC.Types.F# (GHC.Prim.plusFloat# x 5.0#) })
                                     ds8 }
                                Graphics.Gloss.Internals.Interface.Backend.Types.KeyDown
                                -> case world1 of wild3 { Main.Game ds5 ds6 ds7 ds8 ->
                                   Main.Game
                                     ds5
                                     ds6
                                     (case ds7 of wild4 { GHC.Types.F# x ->
                                      GHC.Types.F# (GHC.Prim.minusFloat# x 5.0#) })
                                     ds8 } }
                           Graphics.Gloss.Internals.Interface.Backend.Types.MouseButton ipv
                           -> world1 } } #)) -}
505f430a855a13d7896673fb5f2154cb
  main30 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m11,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Translate
                   Main.main5
                   Main.main31
                   Main.main23) -}
ad88f976b02824949dfd2a2335ec294f
  main31 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 150.0#) -}
3e3b0b56359a029e30a87862d4f14d90
  main32 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m10,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Main.main35
                   Main.main33) -}
2c9be41abd663b20372c28ce2d9c98cc
  main33 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- HasNoCafRefs, Strictness: m5,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.ThickCircle
                   Main.main34
                   Main.main26) -}
2351077969a812badb43dec55cb51d5d
  main34 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 5.0#) -}
97cbde7c7b5fc3ccb2b1aac1569a8eb0
  main35 :: Graphics.Gloss.Internals.Data.Color.Color
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Graphics.Gloss.Internals.Data.Color.RGBA
                   0.8#
                   -0.2#
                   -0.2#
                   1.0#) -}
e9abbd223559f5e8d366c1b6d52bceaf
  main36 :: Main.PongGame
  {- HasNoCafRefs,
     Unfolding: (Main.Game
                   Main.main42
                   Main.main39
                   Main.main38
                   Main.main37) -}
7df0332b17ec8d3ff2b9692516e939f3
  main37 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -80.0#) -}
fc4e53bcf57a652bcfcbe672ddce9c6d
  main38 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 40.0#) -}
529082599c76d5d736b4a6c84ac90fd9
  main39 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Unfolding: ((Main.main41, Main.main40)) -}
38e048dd368bd26c672a57b237a5c045
  main4 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Main.main5, Main.main5)) -}
9a3b4acd2fc3e4c5aeaaab9ea4b9d4f7
  main40 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 3.0#) -}
e80ed1e12a7a97314f086363a63d2455
  main41 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 30.0#) -}
bfee3b7ff05f0272b1dcae82389925fc
  main42 :: (GHC.Types.Float, GHC.Types.Float)
  {- HasNoCafRefs, Unfolding: ((Main.main43, Main.main41)) -}
cba16dc34d189eb71a51a4a19063c88b
  main43 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -10.0#) -}
0ac79413b76bbe750be16a3087ecc887
  main44 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 60#) -}
5619db26a0242640286d6e21275d1dbd
  main45 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Main.main49
                   Main.main47
                   Main.main46) -}
a6c26aeb06298c485259ebcd8b309bfa
  main46 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.offset, Main.offset)) -}
aee4fcac42bcc750833cfabe9731c267
  main47 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main48, Main.main48)) -}
896c8b9bd5a7a7fd503c7a77eb195fae
  main48 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 300#) -}
d4d3ef9523c518981b51669ad8cf7488
  main49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Pong"#) -}
a100dd1b89d330d7e540773824900f8e
  main5 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
47978d26a0994f8816a9c64e136ccedd
  main50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main51) -}
c4b806d2c1dc81ac5ac29c6cba4e8700
  main51 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main53 Main.main52) -}
fbd39dd27759be1df1cbc5438ad46824
  main52 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4a97ffd54020ae6fcb2cceb9a0d92af6
  main53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Welcome to Pong"#) -}
41d1e604c052be1760e7b7222b0fe732
  main54 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
0119b343e7c2c9e8ccb2f7c024075e3a
  main6 ::
    Main.PongGame
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x :: Main.PongGame)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    Graphics.Gloss.Internals.Data.Picture.Pictures
                      (GHC.Types.:
                         @ Graphics.Gloss.Internals.Data.Picture.Picture
                         (let {
                            p :: (GHC.Types.Float, GHC.Types.Float)
                            = case x of wild { Main.Game ds ds1 ds2 ds3 -> ds }
                          } in
                          Graphics.Gloss.Internals.Data.Picture.Translate
                            (case p of wild { (,) x1 ds -> x1 })
                            (case p of wild { (,) ds y -> y })
                            Main.main32)
                         (GHC.Types.:
                            @ Graphics.Gloss.Internals.Data.Picture.Picture
                            Main.main19
                            (GHC.Types.:
                               @ Graphics.Gloss.Internals.Data.Picture.Picture
                               (let {
                                  y :: GHC.Types.Float
                                  = case x of wild { Main.Game ds ds1 ds2 ds3 -> ds2 }
                                } in
                                Graphics.Gloss.Internals.Data.Picture.Pictures
                                  (GHC.Types.:
                                     @ Graphics.Gloss.Internals.Data.Picture.Picture
                                     (Graphics.Gloss.Internals.Data.Picture.Translate
                                        Main.paddleR
                                        y
                                        Main.main18)
                                     (GHC.Types.:
                                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                                        (Graphics.Gloss.Internals.Data.Picture.Translate
                                           Main.paddleR
                                           y
                                           Main.main12)
                                        (GHC.Types.[]
                                           @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                               (GHC.Types.:
                                  @ Graphics.Gloss.Internals.Data.Picture.Picture
                                  (let {
                                     y :: GHC.Types.Float
                                     = case x of wild { Main.Game ds ds1 ds2 ds3 -> ds3 }
                                   } in
                                   Graphics.Gloss.Internals.Data.Picture.Pictures
                                     (GHC.Types.:
                                        @ Graphics.Gloss.Internals.Data.Picture.Picture
                                        (Graphics.Gloss.Internals.Data.Picture.Translate
                                           Main.paddleL
                                           y
                                           Main.main7)
                                        (GHC.Types.:
                                           @ Graphics.Gloss.Internals.Data.Picture.Picture
                                           (Graphics.Gloss.Internals.Data.Picture.Translate
                                              Main.paddleL
                                              y
                                              Main.main12)
                                           (GHC.Types.[]
                                              @ Graphics.Gloss.Internals.Data.Picture.Picture))))
                                  (GHC.Types.[]
                                     @ Graphics.Gloss.Internals.Data.Picture.Picture))))) #)) -}
58559bb09b5a3ff49cd952deb6fec0d9
  main7 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Unfolding: (Graphics.Gloss.Internals.Data.Picture.Color
                   Graphics.Gloss.Data.Color.orange
                   Main.main8) -}
e5ad22e2550e4cb60f974c06f94d6021
  main8 :: Graphics.Gloss.Internals.Data.Picture.Picture
  {- Strictness: m2,
     Unfolding: (Graphics.Gloss.Internals.Data.Picture.Polygon
                   Main.main9) -}
9b2ca07e86c45b22cfcc543cf854c7c8
  main9 :: Graphics.Gloss.Internals.Data.Picture.Path
  {- Unfolding: (case Graphics.Gloss.Data.Picture.$wrectanglePath
                        Main.main11
                        Main.main10 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ Graphics.Gloss.Internals.Data.Picture.Point
                   ww1
                   ww2 }) -}
fe63330dae3b074c4cf48d129b94eb72
  offset :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 100#) -}
254ab8c798b7872fdde7dc69508f373f
  paddleL :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.F# -120.0#) -}
0aadc7fadc1f6fa0ddb6492213b5a948
  paddleR :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 120.0#) -}
208a88d9a1a5a4dc4dd3cef8d4e62fd8
  player1 :: Main.PongGame -> GHC.Types.Float
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 -> ds3 }) -}
3162b1370556b613e40d1d6cb6500575
  player2 :: Main.PongGame -> GHC.Types.Float
  RecSel Left Main.PongGame
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.PongGame) ->
                 case ds of wild { Main.Game ds1 ds2 ds3 ds4 -> ds4 }) -}
instance GHC.Show.Show [Main.PongGame] = Main.$fShowPongGame
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

